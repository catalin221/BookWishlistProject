// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaulBejinariu_Project.Data;

#nullable disable

namespace PaulBejinariu_Project.Migrations
{
    [DbContext(typeof(PaulBejinariu_ProjectContext))]
    [Migration("20230119160129_fixMigrations")]
    partial class fixMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PaulBejinariu_Project.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BookReadId")
                        .HasColumnType("int");

                    b.Property<int?>("BookWishlistId")
                        .HasColumnType("int");

                    b.Property<string>("LinkToShop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("BookReadId");

                    b.HasIndex("BookWishlistId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TimeSpent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookRead");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookReview");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookWishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookGenreId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookGenreId");

                    b.ToTable("BookWishlist");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.Book", b =>
                {
                    b.HasOne("PaulBejinariu_Project.Models.BookRead", null)
                        .WithMany("Books")
                        .HasForeignKey("BookReadId");

                    b.HasOne("PaulBejinariu_Project.Models.BookWishlist", null)
                        .WithMany("Books")
                        .HasForeignKey("BookWishlistId");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookReview", b =>
                {
                    b.HasOne("PaulBejinariu_Project.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookWishlist", b =>
                {
                    b.HasOne("PaulBejinariu_Project.Models.BookGenre", "BookGenre")
                        .WithMany()
                        .HasForeignKey("BookGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookGenre");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookRead", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("PaulBejinariu_Project.Models.BookWishlist", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
